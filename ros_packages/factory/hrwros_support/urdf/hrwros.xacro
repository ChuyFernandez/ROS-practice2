<?xml version="1.0" ?>
<robot name="hrwros" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- world -->
  <!--
  Siempre es una buena idea tener un punto de partida claro para nuestra escena (un vinculo al que
  todo lo demas esta conectado). Por lo general se utiliza el nombre de "base_link" o "world".
  -->
  <link name="world" />
  
  <!-- 
  Aqui empiezan una serie de declaraciones xacro:include (para incluir otros archivos xacro) y tambien declaraciones
  para hacer llamadas a macros (especificamente se importan algunos modelos previamente disenados). 
  -->
  <!-- workcell -->
  <xacro:include filename="$(find hrwros_support)/urdf/workcell/workcell.urdf.xacro"/>
  <xacro:workcell_urdf workcell_parent="world_interface"/>

  <!-- Robot1 Pedestal -->
  <xacro:include filename="$(find hrwros_support)/urdf/robot_pedestal/robot_pedestal.urdf.xacro"/>
  <xacro:robot_pedestal_urdf pedestal_prefix="robot1_" pedestal_parent="world_interface" pedestal_height="0.95">
    <origin xyz="0.5 1.8 0.0" rpy="0 0 0"/>
  </xacro:robot_pedestal_urdf>

  <!-- Robot1 -->
  <xacro:include filename="$(find ur_description)/urdf/ur10.urdf.xacro"/>
  <xacro:ur10_robot prefix="robot1_" joint_limited="true"/>

  <!-- Vacuum Gripper1 -->
  <xacro:include filename="$(find hrwros_support)/urdf/vacuum_gripper/vacuum_gripper.urdf.xacro"/>
  <xacro:vacuum_gripper_urdf prefix="vacuum_gripper1_" joint_prefix="vacuum_gripper1_joint"/>

  <!-- bins -->
  <xacro:include filename="$(find hrwros_support)/urdf/bin/bin.urdf.xacro"/>
  <xacro:bin_urdf prefix="bin_1_"/>

  <!-- Joints -->
  <joint name="world_interface_to_world" type="fixed">
    <parent link="world" />
    <child link="world_interface" />
  </joint>

  <!-- robot1-pedestal to world. -->
  <joint name="robot1_pedestal_to_world_interface" type="fixed">
    <parent link="world_interface" />
    <child link="robot1_pedestal_link" />
    <origin xyz="0.5 1.8 0.0" rpy="0.0 0.0 0.0"/>
  </joint>

  <!-- robot1 to pedestal. -->
  <joint name="robot1_to_pedestal" type="fixed">
  <origin xyz="0 0 0.95" rpy="0 0 0" />
  <parent link="robot1_pedestal_link" />
  <child link="robot1_base_link" />
  </joint>

  <!-- gripper1 to robot1. -->
  <joint name="gripper1_to_robot1" type="fixed">
    <parent link="robot1_tool0" />
    <child link="vacuum_gripper1_base_link" />
  </joint>

  <!-- A continuacion tenemos la articulacion que coloca al contenedor al lado del transportador y el robot -->
  <!-- bin 1 -->
  <joint name="bin_1_joint" type="fixed">
    <parent link="world_interface" />
    <child link="bin_1_base_link" />
    <origin xyz="-8.0 -2.2 0.0" rpy="0 0 0" />
  </joint>

  <!-- 
  Agregamos un pedestal (una forma geometrica en forma de caja) que nos servira para colocar a nuestro robot encima de el,
  el cual estara situado a un lado del contenedor.
  
  Para esta tarea agregaremos dos cosas:
    - Un enlace (el cual describira a una caja)
    - Una articulacion (la cual le dara una posicion en el mundo de la fabrica) 

  Las formas primitivas tienen su origen en el centro de la forma en URDF. Este origen se 
  encuentra en el origen del enlace que es el padre.

  Los colores se agregan a las formas geometricas agregando un elemento <material>.
  	<material name="">
		- name: El nombre nos permite reutilizarlo para otros objetos en el URDF.
  -->

  <link name="robot2_pedestal_link">
    <visual>
      <origin xyz="0 0 0.3" />
      <material name="robot2_pedestal_color">
        <color rgba="0 0.16 0.53 1" />
      </material>
      <geometry>
        <box size="0.3 0.3 0.6" />
      </geometry>
    </visual>
  </link>

  <!-- Esta articulacion conectara el pedestal con el mundo de la fabrica -->

  <joint name="robot2_pedestal_joint" type="fixed">
    <parent link="world" />
    <child link="robot2_pedestal_link" />
    <origin xyz="-7.8 -1.5 0" />
  </joint>

  <!-- 
  Agregamos un segundo robot (el cual estara encima del pedestal).

  En lugar de crear un robot a partir de la geometria simple que nos proporciona URDF, reutilizaremos
  un modelo detallado creado por la comunidad ROS, ya que esto nos ahorrara mucho trabajo y es una
  de las principales ventajas de utilizar un framework como ROS.
  
  Dicho robot no estara conectado directamente a la fabrica (al enlace raiz) sino que estara conectado
  al enlace del pedestal.
  -->

  <xacro:include filename="$(find ur_description)/urdf/ur5.urdf.xacro" />
  <xacro:ur5_robot prefix="robot2_" joint_limited="true" />
  <joint name="robot2-robot2_pedestal_joint" type="fixed">
    <parent link="robot2_pedestal_link" />
    <child link="robot2_base_link" />
    <origin xyz="0 0 0.6" rpy="0 0 ${radians(90)}" />
  </joint>

</robot>
